package net.afriskito.wcf.cell.report;

import com.google.common.collect.ImmutableList;
import java.io.File;
import java.util.HashSet;
import java.util.Set;
import javax.print.Doc;
import javax.print.DocFlavor;
import javax.print.DocPrintJob;
import javax.print.PrintException;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.print.ServiceUI;
import javax.print.SimpleDoc;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.print.attribute.standard.Copies;
import javax.print.event.PrintJobEvent;
import javax.print.event.PrintJobListener;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import net.afriskito.wcf.cell.report.beans.CellPhone;
import net.afriskito.wcf.cell.report.beans.CellUsage;
import net.afriskito.wcf.cell.report.beans.CsvLoader;
import net.afriskito.wcf.cell.report.beans.ReportData;

public class ReportWindow extends javax.swing.JFrame implements PrintJobListener {
    JFileChooser fileChooser = new JFileChooser();
    File employeeFile = null;
    File dataFile = null;
    DefaultComboBoxModel<String> yearModel = new DefaultComboBoxModel();
    Integer selectedYear = null;
    ImmutableList<CellPhone> cellPhones = null;
    ImmutableList<CellUsage> cellUsage = null;
    
    public ReportWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblEmployees = new javax.swing.JLabel();
        txtEmployees = new javax.swing.JTextField();
        btnEmployees = new javax.swing.JButton();
        lblData = new javax.swing.JLabel();
        txtData = new javax.swing.JTextField();
        btnData = new javax.swing.JButton();
        lblYear = new javax.swing.JLabel();
        cmbYear = new javax.swing.JComboBox<>();
        btnPrint = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblEmployees.setText("Employees");

        txtEmployees.setEnabled(false);

        btnEmployees.setText("Open File");
        btnEmployees.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmployeesActionPerformed(evt);
            }
        });

        lblData.setText("Cell Data");

        txtData.setEnabled(false);

        btnData.setText("Open File");
        btnData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDataActionPerformed(evt);
            }
        });

        lblYear.setText("Year");

        cmbYear.setModel(yearModel);
        cmbYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbYearActionPerformed(evt);
            }
        });

        btnPrint.setText("Print");
        btnPrint.setEnabled(false);
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEmployees)
                    .addComponent(lblData)
                    .addComponent(lblYear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cmbYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 262, Short.MAX_VALUE)
                        .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEmployees)
                            .addComponent(txtData))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEmployees, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnData, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmployees)
                    .addComponent(txtEmployees, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEmployees))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblData)
                    .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnData))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblYear)
                    .addComponent(cmbYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPrint))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEmployeesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmployeesActionPerformed
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            try {
                txtEmployees.setText("");
                employeeFile = fileChooser.getSelectedFile();
                cellPhones = CsvLoader.loadEmployeePhones(employeeFile);
                txtEmployees.setText(employeeFile.getAbsolutePath());
            } catch (CsvLoader.LoaderException ex) {
                notify("error while loading employee file: " + ex.getLocalizedMessage());
            }
        }
    }//GEN-LAST:event_btnEmployeesActionPerformed

    private void btnDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDataActionPerformed
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            try {
                txtData.setText("");
                dataFile = fileChooser.getSelectedFile();
                cellUsage = CsvLoader.loadPhoneData(dataFile);
                
                yearModel.removeAllElements();
                Set<String> years = new HashSet<>();
                cellUsage.forEach(row -> years.add(Integer.toString(row.date().getYear())));
                yearModel.addAll(years);
                txtData.setText(dataFile.getAbsolutePath());
            } catch (CsvLoader.LoaderException ex) {
                notify("error while loading data: " + ex.getLocalizedMessage());
            }
        }
    }//GEN-LAST:event_btnDataActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        PrintService[] printServices = PrintServiceLookup.lookupPrintServices(null, null);
        PrintService defaultPrintService = PrintServiceLookup.lookupDefaultPrintService();
        PrintRequestAttributeSet attributeSet = new HashPrintRequestAttributeSet();
        final DocFlavor.SERVICE_FORMATTED docFlavor = DocFlavor.SERVICE_FORMATTED.PRINTABLE;
        PrintService selectedPrintService = ServiceUI.printDialog(null, 0, 0, printServices, defaultPrintService, docFlavor, attributeSet);
        if (selectedPrintService == null)
            return;
        DocPrintJob printJob = selectedPrintService.createPrintJob();
        printJob.addPrintJobListener(this);
        System.out.println(selectedPrintService.getName() + " " + selectedYear);
        ReportData reportData = ReportGenerator.generate(cellPhones, cellUsage, selectedYear);
        ReportPrinter reportPrinter = new ReportPrinter(reportData);
        Doc doc = new SimpleDoc(reportPrinter, docFlavor, null);
        PrintRequestAttributeSet printRequestAttributeSet = new HashPrintRequestAttributeSet();
        printRequestAttributeSet.add(new Copies(1));
        try {
            printJob.print(doc, printRequestAttributeSet);
        } catch (PrintException ex) {
            notify("error while printing report: " + ex.getLocalizedMessage());
        }
    }//GEN-LAST:event_btnPrintActionPerformed

    private void cmbYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbYearActionPerformed
        String selected = (String) yearModel.getSelectedItem();
        if (selected == null) {
            selectedYear = null;
            btnPrint.setEnabled(false);
        } else {
            selectedYear = Integer.parseInt(selected);
            btnPrint.setEnabled(true);
        }
    }//GEN-LAST:event_cmbYearActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReportWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReportWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReportWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReportWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReportWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnData;
    private javax.swing.JButton btnEmployees;
    private javax.swing.JButton btnPrint;
    private javax.swing.JComboBox<String> cmbYear;
    private javax.swing.JLabel lblData;
    private javax.swing.JLabel lblEmployees;
    private javax.swing.JLabel lblYear;
    private javax.swing.JTextField txtData;
    private javax.swing.JTextField txtEmployees;
    // End of variables declaration//GEN-END:variables

    private void notify(String message) {
        JOptionPane.showMessageDialog(this, message, "Report Generator", JOptionPane.INFORMATION_MESSAGE);
    }
    
    @Override
    public void printDataTransferCompleted(PrintJobEvent arg0) {
    }

    @Override
    public void printJobCompleted(PrintJobEvent arg0) {
    }

    @Override
    public void printJobFailed(PrintJobEvent arg0) {
        notify("Print job failed");
    }

    @Override
    public void printJobCanceled(PrintJobEvent arg0) {
        notify("print job canceled");
    }

    @Override
    public void printJobNoMoreEvents(PrintJobEvent arg0) {
    }

    @Override
    public void printJobRequiresAttention(PrintJobEvent arg0) {
    }
}
